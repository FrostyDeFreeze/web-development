const secsConverter = function (input) {
	if (typeof input !== `number` || input < 0) {
		throw new Error(`–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º`)
	}

	let remainder

	const y = 31_536_000
	const d = 86_400
	const h = 3_600
	const m = 60

	this.–≥ = (input / y) | 0
	this.–¥ = ((remainder = input - y * this.–≥) / d) | 0
	this.—á = ((remainder -= d * this.–¥) / h) | 0
	this.–º = ((remainder -= h * this.—á) / m) | 0
	this.—Å = (remainder -= m * this.–º) | 0
}

const convertToSecs = input => {
	if (typeof input === `number`) {
		return input > 1_000_000_000_000 ? Math.floor(input / 1_000) : input
	} else if (typeof input === `string` || input instanceof Date) {
		const date = new Date(input)

		if (!isNaN(date)) {
			return Math.floor(date.getTime() / 1_000)
		} else {
			throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã`)
		}
	}

	throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏`)
}

const humanizer = (input, options = {}) => {
	const seconds = convertToSecs(input)
	const converted = new secsConverter(seconds)

	const { units = [`–≥`, `–¥`, `—á`, `–º`, `—Å`], delimiter = `, `, precision = units.length } = options

	let out = ``
	let i = 0

	for (const field of units) {
		if (converted[field]) {
			out += (out.length ? delimiter : ``) + converted[field] + field

			if (++i === precision) {
				break
			}
		}
	}

	return out || `0—Å`
}

const getTimeToNewYear = () => {
	const mskDate = new Date().toLocaleString(`en-US`, { timeZone: `Europe/Moscow` })
	const now = new Date(mskDate).getTime() / 1000

	const nextYear = new Date(mskDate).getFullYear() + 1
	const newYearTimestamp = new Date(`${nextYear}-01-01T00:00:00+03:00`).getTime() / 1000

	console.info(`–î–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å: ${humanizer(newYearTimestamp - now)} üéâ`)
}

getTimeToNewYear()

const timeToNewYear = () => {
	const mskDate = new Date().toLocaleString(`en-US`, { timeZone: `Europe/Moscow` })
	const now = new Date(mskDate)

	const nextYear = now.getFullYear() + 1
	const newYearDate = new Date(`${nextYear}-01-01T00:00:00+03:00`)

	const diff = newYearDate - now

	const units = {
		d: Math.floor(diff / (1000 * 60 * 60 * 24)),
		h: Math.floor((diff / (1000 * 60 * 60)) % 24),
		m: Math.floor((diff / (1000 * 60)) % 60),
		s: Math.floor((diff / 1000) % 60)
	}

	console.info(`–î–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å: ${units.d} –¥–Ω–µ–π, ${units.h} —á–∞—Å–æ–≤, ${units.m} –º–∏–Ω—É—Ç, ${units.s} —Å–µ–∫—É–Ω–¥ üéâ`)
}

getTimeToNewYear()
